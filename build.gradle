plugins {
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
}

group = 'com.docs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// === Spring Boot 기본 ===
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'org.apache.tika:tika-core:2.9.4'
	// === MariaDB Database ===
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.3'
	// === Hibernate 7.x dialect 설정 ===
	implementation 'org.hibernate.orm:hibernate-core:7.0.2.Final'
	// === Jakarta (Java 17 이상용) ===
	implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
	// === Apache POI (Office 변환) ===
	implementation 'org.apache.poi:poi-ooxml:5.4.1'
	// === docx4j (DOCX 변환용) ===
	implementation 'org.docx4j:docx4j-core:11.5.3'
	implementation 'org.docx4j:docx4j-export-fo:11.5.3'
	// === PDFBox (PDF 이미지 변환) ===
	implementation 'org.apache.pdfbox:pdfbox:3.0.5'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	// Test 설정
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
